{"version":3,"sources":["components/MailStats/QueueStats.js","components/MailStats/ServiceStats.js","components/MailStats/Volumes.js","components/MailStats/DiskStats.js","components/MailStats/Home.js","components/MailStats/Menu.js","App.js","index.js"],"names":["QueueStats","useState","queueStats","setQueueStats","loading","setLoading","readQueueStatsDB","console","log","axios","get","certDataJSON","data","STATS_SORTED_ASC","sort","objA","objB","Number","Date","documentID","status","useEffect","timer","setInterval","clearInterval","loadSpinner","GridLoader","color","size","itemsToRender","filter","el","serverName","className","map","item","queueName","messageCount","ServiceStats","serviceStats","setServiceStats","readServiceStatsDB","serviceName","Volumes","props","diskData","volumes","vol","volumeCapacity","volumeFreeSpace","capacityGB","freeSpaceGB","Math","floor","toString","concat","bgColor","percentFree","perCentFreeString","style","backgroundColor","width","label","DiskStats","diskStats","setDiskStats","readDiskStatsDB","localeCompare","Home","src","alt","BurgerMenu","isOpen","setIsOpen","onClose","Trigger","variant","icon","onClick","List","to","component","Menu","Item","as","Divider","App","path","element","exact","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.89f9f34a.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport \"./QueueStats.css\";\nimport {GridLoader} from \"react-spinners\"\n\nconst QueueStats = () => {\n  const [queueStats, setQueueStats] = useState([]);\n  const [loading, setLoading] = useState(false)\n\n  const readQueueStatsDB = async function () {\n    setLoading(true)\n\n    console.log('trigger Axios')\n\n    const certDataJSON = await axios.get(\n      `https://mailstats-api.onrender.com/api/v1/queueStats`\n    );\n\n    console.log(certDataJSON.data);\n\n    const STATS_SORTED_ASC = certDataJSON.data.sort(\n      (objA, objB) =>\n        Number(new Date(objA.documentID)) - Number(new Date(objB.documentID))\n    );\n\n    // console.log(certDataJSON.status);\n\n    if (certDataJSON.status === 200) {\n      setQueueStats(STATS_SORTED_ASC);\n      setLoading(false)\n    }\n  };\n useEffect(() => {\n   readQueueStatsDB()\n }, []);\n    // readQueueStatsDB();\n\n  useEffect(() => {\n    const timer = setInterval(() => readQueueStatsDB(), 30000);\n\n   \n    return () => clearInterval(timer);\n  }, []);\n\n\n  const loadSpinner = <GridLoader color=\"#4f5e7d\" loading={loading} size={33} />;\n \n\n  \n\n  const itemsToRender = queueStats.filter((el) => el.serverName !== \"NoData\");\n\n  console.log(itemsToRender)\n\n  return (\n    <div className=\"QueueStats\">\n      <div className=\"pagelabel\">\n        <p>SMTP Queue Stats</p>\n      </div>\n      <div className=\"spinnerQueue\">{loadSpinner}</div>\n\n      {itemsToRender.map((item) => (\n        <div className=\"listItemWrapperQueue\">\n          <div className=\"listItemWrapperInnerQueue\">\n            <ul>\n              <li className=\"listItemQueue1\">\n                <div className=\"serverlabelQueue\">\n                  <p>{item.serverName}</p>\n                </div>\n              </li>\n              <li className=\"listItemQueue2\">\n                <div className=\"queueLabel\">\n                  <p className=\"label\">Queue:</p> {item.queueName}\n                </div>\n                <div className=\"messageCount\">{item.messageCount}</div>\n              </li>\n            </ul>\n          </div>\n\n          {/* <div className=\"messageCount\">{item.messageCount}</div> */}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default QueueStats;\n","\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport \"./ServiceStats.css\";\nimport { GridLoader } from \"react-spinners\";\n\nconst ServiceStats = () => {\n  const [serviceStats, setServiceStats] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const readServiceStatsDB = async function () {\n\n    setLoading(true);\n\n    console.log('trigger Axios')\n\n    const certDataJSON = await axios.get(\n      `https://mailstats-api.onrender.com/api/v1/serviceStats`\n    );\n\n    console.log(certDataJSON.data);\n\n    const STATS_SORTED_ASC = certDataJSON.data.sort(\n      (objA, objB) =>\n        Number(new Date(objA.documentID)) - Number(new Date(objB.documentID))\n    );\n\n    // console.log(certDataJSON.status);\n\n    if (certDataJSON.status === 200) {\n      setServiceStats(STATS_SORTED_ASC);\n       setLoading(false);\n    }\n  };\n useEffect(() => {\n   readServiceStatsDB()\n }, []);\n    // readQueueStatsDB();\n\n  useEffect(() => {\n    const timer = setInterval(() => readServiceStatsDB(), 30000);\n\n   \n    return () => clearInterval(timer);\n  }, []);\n\n  const loadSpinner = (\n    <GridLoader color=\"#4f5e7d\" loading={loading} size={33} />\n  );\n\n  const itemsToRender = serviceStats.filter((el) => el.serverName !== \"NoData\");\n\n  console.log(itemsToRender)\n\n  return (\n    <div className=\"ServiceStats\">\n      <div className=\"pagelabel\">\n        <p>SMTP Service Stats</p>\n      </div>\n      <div className=\"spinnerSVC\">{loadSpinner}</div>\n      {itemsToRender.map((item) => (\n        <div className=\"listItemWrapperSVC\">\n          <div className=\"listItemWrapperInner\">\n            <ul>\n              <li className=\"listItemSVC\">\n                <div className=\"serverlabel\">\n                  <p>{item.serverName}</p>\n                </div>\n              </li>\n              <li className=\"listItemSVC\">\n                <p className=\"servicelabel\">Service:</p>\n                <p>{item.serviceName}</p>\n              </li>\n            </ul>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ServiceStats;\n","import \"./Volumes.css\";\r\n\r\nconst Volumes = (props) => {\r\n\r\n  console.log(props.data)\r\n\r\n  const diskData = props.data;\r\n  return (<div>\r\n    {diskData.map((el) => {\r\n      return (\r\n        \r\n        \r\n            <div>\r\n              <div className=\"serverlabelDisk\">\r\n                <p>{el.serverName}</p>\r\n              </div>\r\n              <div className=\"displayFrame\">\r\n                <div className=\"header\">Drive</div>\r\n                <div className=\"header\">Total Space</div>\r\n                <div className=\"header\">Free Space</div>\r\n                <div className=\"headerBar\"></div>\r\n                <div className=\"header\">% Free</div>\r\n              </div>\r\n\r\n          {el.volumes.map((vol) => {\r\n\r\n            console.log(vol.capacityGB, vol.freeSpaceGB);\r\n\r\n           \r\n           let volumeCapacity\r\n                \r\n                vol.capacityGB >= 1024\r\n                  ? (volumeCapacity = Math.floor(vol.capacityGB / 1024)\r\n                      .toString()\r\n                      .concat(\" TB\"))\r\n                  : (volumeCapacity = Math.floor(vol.capacityGB)\r\n                      .toString()\r\n                      .concat(\" GB\"));\r\n          \r\n\r\n            let volumeFreeSpace\r\n\r\n                vol.freeSpaceGB >= 1024\r\n             ? (volumeFreeSpace = (Math.floor((vol.freeSpaceGB/1024)))\r\n                 .toString()\r\n                 .concat(\" TB\"))\r\n             : (volumeFreeSpace = Math.floor(vol.freeSpaceGB)\r\n                 .toString()\r\n                .concat(\" GB\"));\r\n            \r\n            const percentFree = Math.floor((vol.freeSpaceGB / vol.capacityGB) * 100);\r\n\r\n            const perCentFreeString = (percentFree).toString().concat(\"%\")\r\n\r\n            let bgColor\r\n\r\n            (percentFree < 15) ? (percentFree < 8 ? bgColor = \"IndianRed\" : bgColor = \"Gold\") : bgColor = \"YellowGreen\"\r\n\r\n            console.log(perCentFreeString)\r\n\r\n            const style = {\r\n              backgroundColor: bgColor ,\r\n              width: perCentFreeString,\r\n            };\r\n              \r\n              return (\r\n                <div className=\"volumesMainGrid\">\r\n                  <div className=\"driveLabelDisk\">{vol.label}</div>\r\n                  <div className=\"totalSizeDisk\">{volumeCapacity}</div>\r\n                  <div className=\"freeSpaceDisk\">{volumeFreeSpace}</div>\r\n                  <div className=\"freeSpaceChartBarDisk\">\r\n                    <div\r\n                      className=\"diskBar\"\r\n                      style={\r\n                        style\r\n                      }\r\n                    ></div>\r\n                  </div>\r\n                  <div className=\"freeSpacePerCentDisk\">{percentFree}%</div>\r\n                </div>\r\n              );\r\n                       } )}\r\n            </div>\r\n        // );\r\n      \r\n      \r\n      \r\n      \r\n      )\r\n    })}\r\n\r\n     </div>)\r\n    }\r\n  \r\n\r\n          \r\n     \r\n//     });\r\n \r\n// };\r\n\r\nexport default Volumes\r\n","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport \"./DiskStats.css\";\nimport { GridLoader } from \"react-spinners\"\nimport Volumes from './Volumes'\n\nconst DiskStats = () => {\n  const [diskStats, setDiskStats] = useState([]);\n  const [loading, setLoading] = useState(false)\n\n  const readDiskStatsDB = async function () {\n    setLoading(true)\n\n    console.log('trigger Axios')\n\n    const certDataJSON = await axios.get(\n      `https://mailstats-api.onrender.com/api/v1/diskStats`\n    );\n\n    // console.log(certDataJSON.data);\n\n    const STATS_SORTED_ASC = certDataJSON.data.sort(\n      (objA, objB) => {return objA.serverName.localeCompare(objB.serverName); }\n        \n    );\n\n    // console.log(certDataJSON.status);\n\n    if (certDataJSON.status === 200) {\n      setDiskStats(STATS_SORTED_ASC);\n      setLoading(false)\n    }\n  };\n  useEffect(() => {\n    readDiskStatsDB()\n  }, []);\n  \n\n  useEffect(() => {\n    const timer = setInterval(() => readDiskStatsDB(), 300000);\n\n   \n    return () => clearInterval(timer);\n  }, []);\n\n\n  const loadSpinner = <GridLoader color=\"#4f5e7d\" loading={loading} size={33} />;\n \n\n  \n\n  const itemsToRender = diskStats.filter((el) => el.serverName !== \"NoData\");\n\n  console.log(itemsToRender)\n\n  return (\n    <div className=\"DiskStats\">\n      <div className=\"pagelabelDisk\">\n        <p>Exchange Disk Stats</p>\n      </div>\n      <div className=\"spinnerSVC\">{loadSpinner}</div>\n\n      <div className=\"WrapperDisk\">\n        <Volumes data={itemsToRender} />\n      </div>\n    </div>\n  );\n};\n\nexport default DiskStats;\n","import './Home.css'\r\n\r\nfunction Home() {\r\n  \r\n    return (\r\n      <div className=\"home\">\r\n        <p>Mail Stats</p>\r\n\r\n        <img\r\n          src=\"https://markthbkk.github.io/mailstatsFE/server.jpg\"\r\n          alt=\"server in rack\"\r\n        ></img>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, IconButton } from \"@contentful/f36-components\";\r\nimport { MenuIcon } from \"@contentful/f36-icons\";\r\nimport \"./Menu.css\";\r\n\r\nfunction BurgerMenu() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  return (\r\n    <Menu isOpen={isOpen} onClose={() => setIsOpen(false)}>\r\n      <Menu.Trigger>\r\n        <IconButton\r\n          variant=\"secondary\"\r\n          icon={<MenuIcon />}\r\n          aria-label=\"toggle menu\"\r\n          onClick={() => setIsOpen(!isOpen)}\r\n        />\r\n      </Menu.Trigger>\r\n      <Menu.List>\r\n        <div className=\"menuList\">\r\n          <Link to=\"/Home\" component={Menu.Item} as=\"a\">\r\n            Home\r\n          </Link>\r\n          <Menu.Divider />\r\n          <Link to=\"/queuestats\" component={Menu.Item} as=\"a\">\r\n            Mail Queue Statistics\r\n          </Link>\r\n          <Menu.Divider />\r\n          <Link to=\"/servicestats\" component={Menu.Item} as=\"a\">\r\n            Mail Service Statistics\r\n          </Link>\r\n          <Menu.Divider />\r\n          <Link to=\"/diskstats\" component={Menu.Item} as=\"a\">\r\n            Server Disk Statistics\r\n          </Link>\r\n        </div>\r\n      </Menu.List>\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default BurgerMenu;\r\n","import QueueStats from \"./components/MailStats/QueueStats\";\nimport ServiceStats from \"./components/MailStats/ServiceStats\";\nimport DiskStats from \"./components/MailStats/DiskStats\";\nimport Home from \"./components/MailStats/Home\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport BurgerMenu from \"./components/MailStats/Menu\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"AppFrame\">\n      <Router>\n        {<BurgerMenu />}\n        <Routes>\n          <Route path=\"/home\" element={<Home />} />\n          <Route exact path=\"/\" element={<Navigate to=\"/home\" />} />\n          <Route path=\"/queuestats\" element={<QueueStats />} />\n          <Route path=\"/servicestats\" element={<ServiceStats />} />\n          <Route path=\"/diskstats\" element={<DiskStats />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}